// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apk_protomsg.proto

#ifndef PROTOBUF_apk_5fprotomsg_2eproto__INCLUDED
#define PROTOBUF_apk_5fprotomsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace apk {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_apk_5fprotomsg_2eproto();
void protobuf_AssignDesc_apk_5fprotomsg_2eproto();
void protobuf_ShutdownFile_apk_5fprotomsg_2eproto();

class Command;
class CommandResponse;
class CommandInstallApkResponse;
class FailTuple;
class CommandInstallApkDigest;
class OneApk;
class ApkList;
class AdbDevice;
class DevicesList;

// ===================================================================

class Command : public ::google::protobuf::Message {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Command& default_instance();

  void Swap(Command* other);

  // implements Message ----------------------------------------------

  Command* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline const ::std::string& cmd() const;
  inline void set_cmd(const ::std::string& value);
  inline void set_cmd(const char* value);
  inline void set_cmd(const char* value, size_t size);
  inline ::std::string* mutable_cmd();
  inline ::std::string* release_cmd();
  inline void set_allocated_cmd(::std::string* cmd);

  // required int32 cmd_no = 2;
  inline bool has_cmd_no() const;
  inline void clear_cmd_no();
  static const int kCmdNoFieldNumber = 2;
  inline ::google::protobuf::int32 cmd_no() const;
  inline void set_cmd_no(::google::protobuf::int32 value);

  // optional int32 sub_cmd_no = 3;
  inline bool has_sub_cmd_no() const;
  inline void clear_sub_cmd_no();
  static const int kSubCmdNoFieldNumber = 3;
  inline ::google::protobuf::int32 sub_cmd_no() const;
  inline void set_sub_cmd_no(::google::protobuf::int32 value);

  // required int64 timestamp = 4;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  inline ::google::protobuf::int64 timestamp() const;
  inline void set_timestamp(::google::protobuf::int64 value);

  // repeated string param = 5;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 5;
  inline const ::std::string& param(int index) const;
  inline ::std::string* mutable_param(int index);
  inline void set_param(int index, const ::std::string& value);
  inline void set_param(int index, const char* value);
  inline void set_param(int index, const char* value, size_t size);
  inline ::std::string* add_param();
  inline void add_param(const ::std::string& value);
  inline void add_param(const char* value);
  inline void add_param(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& param() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_param();

  // @@protoc_insertion_point(class_scope:apk.Command)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_cmd_no();
  inline void clear_has_cmd_no();
  inline void set_has_sub_cmd_no();
  inline void clear_has_sub_cmd_no();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* cmd_;
  ::google::protobuf::int32 cmd_no_;
  ::google::protobuf::int32 sub_cmd_no_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::RepeatedPtrField< ::std::string> param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_apk_5fprotomsg_2eproto();
  friend void protobuf_AssignDesc_apk_5fprotomsg_2eproto();
  friend void protobuf_ShutdownFile_apk_5fprotomsg_2eproto();

  void InitAsDefaultInstance();
  static Command* default_instance_;
};
// -------------------------------------------------------------------

class CommandResponse : public ::google::protobuf::Message {
 public:
  CommandResponse();
  virtual ~CommandResponse();

  CommandResponse(const CommandResponse& from);

  inline CommandResponse& operator=(const CommandResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommandResponse& default_instance();

  void Swap(CommandResponse* other);

  // implements Message ----------------------------------------------

  CommandResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CommandResponse& from);
  void MergeFrom(const CommandResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline const ::std::string& cmd() const;
  inline void set_cmd(const ::std::string& value);
  inline void set_cmd(const char* value);
  inline void set_cmd(const char* value, size_t size);
  inline ::std::string* mutable_cmd();
  inline ::std::string* release_cmd();
  inline void set_allocated_cmd(::std::string* cmd);

  // required int32 cmd_no = 2;
  inline bool has_cmd_no() const;
  inline void clear_cmd_no();
  static const int kCmdNoFieldNumber = 2;
  inline ::google::protobuf::int32 cmd_no() const;
  inline void set_cmd_no(::google::protobuf::int32 value);

  // required int32 sub_cmd_no = 3;
  inline bool has_sub_cmd_no() const;
  inline void clear_sub_cmd_no();
  static const int kSubCmdNoFieldNumber = 3;
  inline ::google::protobuf::int32 sub_cmd_no() const;
  inline void set_sub_cmd_no(::google::protobuf::int32 value);

  // required int32 code = 4;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 4;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // optional int64 time_cost = 5;
  inline bool has_time_cost() const;
  inline void clear_time_cost();
  static const int kTimeCostFieldNumber = 5;
  inline ::google::protobuf::int64 time_cost() const;
  inline void set_time_cost(::google::protobuf::int64 value);

  // repeated string info = 6;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 6;
  inline const ::std::string& info(int index) const;
  inline ::std::string* mutable_info(int index);
  inline void set_info(int index, const ::std::string& value);
  inline void set_info(int index, const char* value);
  inline void set_info(int index, const char* value, size_t size);
  inline ::std::string* add_info();
  inline void add_info(const ::std::string& value);
  inline void add_info(const char* value);
  inline void add_info(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& info() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_info();

  // @@protoc_insertion_point(class_scope:apk.CommandResponse)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_cmd_no();
  inline void clear_has_cmd_no();
  inline void set_has_sub_cmd_no();
  inline void clear_has_sub_cmd_no();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_time_cost();
  inline void clear_has_time_cost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* cmd_;
  ::google::protobuf::int32 cmd_no_;
  ::google::protobuf::int32 sub_cmd_no_;
  ::google::protobuf::int64 time_cost_;
  ::google::protobuf::RepeatedPtrField< ::std::string> info_;
  ::google::protobuf::int32 code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_apk_5fprotomsg_2eproto();
  friend void protobuf_AssignDesc_apk_5fprotomsg_2eproto();
  friend void protobuf_ShutdownFile_apk_5fprotomsg_2eproto();

  void InitAsDefaultInstance();
  static CommandResponse* default_instance_;
};
// -------------------------------------------------------------------

class CommandInstallApkResponse : public ::google::protobuf::Message {
 public:
  CommandInstallApkResponse();
  virtual ~CommandInstallApkResponse();

  CommandInstallApkResponse(const CommandInstallApkResponse& from);

  inline CommandInstallApkResponse& operator=(const CommandInstallApkResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommandInstallApkResponse& default_instance();

  void Swap(CommandInstallApkResponse* other);

  // implements Message ----------------------------------------------

  CommandInstallApkResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CommandInstallApkResponse& from);
  void MergeFrom(const CommandInstallApkResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline const ::std::string& cmd() const;
  inline void set_cmd(const ::std::string& value);
  inline void set_cmd(const char* value);
  inline void set_cmd(const char* value, size_t size);
  inline ::std::string* mutable_cmd();
  inline ::std::string* release_cmd();
  inline void set_allocated_cmd(::std::string* cmd);

  // required int32 cmd_no = 2;
  inline bool has_cmd_no() const;
  inline void clear_cmd_no();
  static const int kCmdNoFieldNumber = 2;
  inline ::google::protobuf::int32 cmd_no() const;
  inline void set_cmd_no(::google::protobuf::int32 value);

  // required int32 sub_cmd_no = 3;
  inline bool has_sub_cmd_no() const;
  inline void clear_sub_cmd_no();
  static const int kSubCmdNoFieldNumber = 3;
  inline ::google::protobuf::int32 sub_cmd_no() const;
  inline void set_sub_cmd_no(::google::protobuf::int32 value);

  // required int32 code = 4;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 4;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);

  // optional int64 time_cost = 5;
  inline bool has_time_cost() const;
  inline void clear_time_cost();
  static const int kTimeCostFieldNumber = 5;
  inline ::google::protobuf::int64 time_cost() const;
  inline void set_time_cost(::google::protobuf::int64 value);

  // required string package_name = 6;
  inline bool has_package_name() const;
  inline void clear_package_name();
  static const int kPackageNameFieldNumber = 6;
  inline const ::std::string& package_name() const;
  inline void set_package_name(const ::std::string& value);
  inline void set_package_name(const char* value);
  inline void set_package_name(const char* value, size_t size);
  inline ::std::string* mutable_package_name();
  inline ::std::string* release_package_name();
  inline void set_allocated_package_name(::std::string* package_name);

  // required string progress = 7;
  inline bool has_progress() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 7;
  inline const ::std::string& progress() const;
  inline void set_progress(const ::std::string& value);
  inline void set_progress(const char* value);
  inline void set_progress(const char* value, size_t size);
  inline ::std::string* mutable_progress();
  inline ::std::string* release_progress();
  inline void set_allocated_progress(::std::string* progress);

  // required string type = 8;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 8;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  inline ::std::string* release_type();
  inline void set_allocated_type(::std::string* type);

  // required string serial_number = 9;
  inline bool has_serial_number() const;
  inline void clear_serial_number();
  static const int kSerialNumberFieldNumber = 9;
  inline const ::std::string& serial_number() const;
  inline void set_serial_number(const ::std::string& value);
  inline void set_serial_number(const char* value);
  inline void set_serial_number(const char* value, size_t size);
  inline ::std::string* mutable_serial_number();
  inline ::std::string* release_serial_number();
  inline void set_allocated_serial_number(::std::string* serial_number);

  // required int32 time_max = 10;
  inline bool has_time_max() const;
  inline void clear_time_max();
  static const int kTimeMaxFieldNumber = 10;
  inline ::google::protobuf::int32 time_max() const;
  inline void set_time_max(::google::protobuf::int32 value);

  // required double package_size = 11;
  inline bool has_package_size() const;
  inline void clear_package_size();
  static const int kPackageSizeFieldNumber = 11;
  inline double package_size() const;
  inline void set_package_size(double value);

  // required string adb_message = 12;
  inline bool has_adb_message() const;
  inline void clear_adb_message();
  static const int kAdbMessageFieldNumber = 12;
  inline const ::std::string& adb_message() const;
  inline void set_adb_message(const ::std::string& value);
  inline void set_adb_message(const char* value);
  inline void set_adb_message(const char* value, size_t size);
  inline ::std::string* mutable_adb_message();
  inline ::std::string* release_adb_message();
  inline void set_allocated_adb_message(::std::string* adb_message);

  // required string stage = 13;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 13;
  inline const ::std::string& stage() const;
  inline void set_stage(const ::std::string& value);
  inline void set_stage(const char* value);
  inline void set_stage(const char* value, size_t size);
  inline ::std::string* mutable_stage();
  inline ::std::string* release_stage();
  inline void set_allocated_stage(::std::string* stage);

  // repeated string info = 14;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 14;
  inline const ::std::string& info(int index) const;
  inline ::std::string* mutable_info(int index);
  inline void set_info(int index, const ::std::string& value);
  inline void set_info(int index, const char* value);
  inline void set_info(int index, const char* value, size_t size);
  inline ::std::string* add_info();
  inline void add_info(const ::std::string& value);
  inline void add_info(const char* value);
  inline void add_info(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& info() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_info();

  // @@protoc_insertion_point(class_scope:apk.CommandInstallApkResponse)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_cmd_no();
  inline void clear_has_cmd_no();
  inline void set_has_sub_cmd_no();
  inline void clear_has_sub_cmd_no();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_time_cost();
  inline void clear_has_time_cost();
  inline void set_has_package_name();
  inline void clear_has_package_name();
  inline void set_has_progress();
  inline void clear_has_progress();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_serial_number();
  inline void clear_has_serial_number();
  inline void set_has_time_max();
  inline void clear_has_time_max();
  inline void set_has_package_size();
  inline void clear_has_package_size();
  inline void set_has_adb_message();
  inline void clear_has_adb_message();
  inline void set_has_stage();
  inline void clear_has_stage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* cmd_;
  ::google::protobuf::int32 cmd_no_;
  ::google::protobuf::int32 sub_cmd_no_;
  ::google::protobuf::int64 time_cost_;
  ::std::string* package_name_;
  ::std::string* progress_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 time_max_;
  ::std::string* type_;
  ::std::string* serial_number_;
  double package_size_;
  ::std::string* adb_message_;
  ::std::string* stage_;
  ::google::protobuf::RepeatedPtrField< ::std::string> info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_apk_5fprotomsg_2eproto();
  friend void protobuf_AssignDesc_apk_5fprotomsg_2eproto();
  friend void protobuf_ShutdownFile_apk_5fprotomsg_2eproto();

  void InitAsDefaultInstance();
  static CommandInstallApkResponse* default_instance_;
};
// -------------------------------------------------------------------

class FailTuple : public ::google::protobuf::Message {
 public:
  FailTuple();
  virtual ~FailTuple();

  FailTuple(const FailTuple& from);

  inline FailTuple& operator=(const FailTuple& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FailTuple& default_instance();

  void Swap(FailTuple* other);

  // implements Message ----------------------------------------------

  FailTuple* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FailTuple& from);
  void MergeFrom(const FailTuple& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string package_name = 1;
  inline bool has_package_name() const;
  inline void clear_package_name();
  static const int kPackageNameFieldNumber = 1;
  inline const ::std::string& package_name() const;
  inline void set_package_name(const ::std::string& value);
  inline void set_package_name(const char* value);
  inline void set_package_name(const char* value, size_t size);
  inline ::std::string* mutable_package_name();
  inline ::std::string* release_package_name();
  inline void set_allocated_package_name(::std::string* package_name);

  // required string app_name = 2;
  inline bool has_app_name() const;
  inline void clear_app_name();
  static const int kAppNameFieldNumber = 2;
  inline const ::std::string& app_name() const;
  inline void set_app_name(const ::std::string& value);
  inline void set_app_name(const char* value);
  inline void set_app_name(const char* value, size_t size);
  inline ::std::string* mutable_app_name();
  inline ::std::string* release_app_name();
  inline void set_allocated_app_name(::std::string* app_name);

  // required string adb_message = 3;
  inline bool has_adb_message() const;
  inline void clear_adb_message();
  static const int kAdbMessageFieldNumber = 3;
  inline const ::std::string& adb_message() const;
  inline void set_adb_message(const ::std::string& value);
  inline void set_adb_message(const char* value);
  inline void set_adb_message(const char* value, size_t size);
  inline ::std::string* mutable_adb_message();
  inline ::std::string* release_adb_message();
  inline void set_allocated_adb_message(::std::string* adb_message);

  // required string user_message = 4;
  inline bool has_user_message() const;
  inline void clear_user_message();
  static const int kUserMessageFieldNumber = 4;
  inline const ::std::string& user_message() const;
  inline void set_user_message(const ::std::string& value);
  inline void set_user_message(const char* value);
  inline void set_user_message(const char* value, size_t size);
  inline ::std::string* mutable_user_message();
  inline ::std::string* release_user_message();
  inline void set_allocated_user_message(::std::string* user_message);

  // required int32 try_times = 5;
  inline bool has_try_times() const;
  inline void clear_try_times();
  static const int kTryTimesFieldNumber = 5;
  inline ::google::protobuf::int32 try_times() const;
  inline void set_try_times(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:apk.FailTuple)
 private:
  inline void set_has_package_name();
  inline void clear_has_package_name();
  inline void set_has_app_name();
  inline void clear_has_app_name();
  inline void set_has_adb_message();
  inline void clear_has_adb_message();
  inline void set_has_user_message();
  inline void clear_has_user_message();
  inline void set_has_try_times();
  inline void clear_has_try_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* package_name_;
  ::std::string* app_name_;
  ::std::string* adb_message_;
  ::std::string* user_message_;
  ::google::protobuf::int32 try_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_apk_5fprotomsg_2eproto();
  friend void protobuf_AssignDesc_apk_5fprotomsg_2eproto();
  friend void protobuf_ShutdownFile_apk_5fprotomsg_2eproto();

  void InitAsDefaultInstance();
  static FailTuple* default_instance_;
};
// -------------------------------------------------------------------

class CommandInstallApkDigest : public ::google::protobuf::Message {
 public:
  CommandInstallApkDigest();
  virtual ~CommandInstallApkDigest();

  CommandInstallApkDigest(const CommandInstallApkDigest& from);

  inline CommandInstallApkDigest& operator=(const CommandInstallApkDigest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommandInstallApkDigest& default_instance();

  void Swap(CommandInstallApkDigest* other);

  // implements Message ----------------------------------------------

  CommandInstallApkDigest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CommandInstallApkDigest& from);
  void MergeFrom(const CommandInstallApkDigest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline const ::std::string& cmd() const;
  inline void set_cmd(const ::std::string& value);
  inline void set_cmd(const char* value);
  inline void set_cmd(const char* value, size_t size);
  inline ::std::string* mutable_cmd();
  inline ::std::string* release_cmd();
  inline void set_allocated_cmd(::std::string* cmd);

  // required int32 total_number = 2;
  inline bool has_total_number() const;
  inline void clear_total_number();
  static const int kTotalNumberFieldNumber = 2;
  inline ::google::protobuf::int32 total_number() const;
  inline void set_total_number(::google::protobuf::int32 value);

  // required int32 success_number = 3;
  inline bool has_success_number() const;
  inline void clear_success_number();
  static const int kSuccessNumberFieldNumber = 3;
  inline ::google::protobuf::int32 success_number() const;
  inline void set_success_number(::google::protobuf::int32 value);

  // required int32 failed_number = 4;
  inline bool has_failed_number() const;
  inline void clear_failed_number();
  static const int kFailedNumberFieldNumber = 4;
  inline ::google::protobuf::int32 failed_number() const;
  inline void set_failed_number(::google::protobuf::int32 value);

  // required int32 time_cost = 5;
  inline bool has_time_cost() const;
  inline void clear_time_cost();
  static const int kTimeCostFieldNumber = 5;
  inline ::google::protobuf::int32 time_cost() const;
  inline void set_time_cost(::google::protobuf::int32 value);

  // required string serial_number = 6;
  inline bool has_serial_number() const;
  inline void clear_serial_number();
  static const int kSerialNumberFieldNumber = 6;
  inline const ::std::string& serial_number() const;
  inline void set_serial_number(const ::std::string& value);
  inline void set_serial_number(const char* value);
  inline void set_serial_number(const char* value, size_t size);
  inline ::std::string* mutable_serial_number();
  inline ::std::string* release_serial_number();
  inline void set_allocated_serial_number(::std::string* serial_number);

  // required string model = 7;
  inline bool has_model() const;
  inline void clear_model();
  static const int kModelFieldNumber = 7;
  inline const ::std::string& model() const;
  inline void set_model(const ::std::string& value);
  inline void set_model(const char* value);
  inline void set_model(const char* value, size_t size);
  inline ::std::string* mutable_model();
  inline ::std::string* release_model();
  inline void set_allocated_model(::std::string* model);

  // repeated .apk.FailTuple fail_list = 8;
  inline int fail_list_size() const;
  inline void clear_fail_list();
  static const int kFailListFieldNumber = 8;
  inline const ::apk::FailTuple& fail_list(int index) const;
  inline ::apk::FailTuple* mutable_fail_list(int index);
  inline ::apk::FailTuple* add_fail_list();
  inline const ::google::protobuf::RepeatedPtrField< ::apk::FailTuple >&
      fail_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::apk::FailTuple >*
      mutable_fail_list();

  // @@protoc_insertion_point(class_scope:apk.CommandInstallApkDigest)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_total_number();
  inline void clear_has_total_number();
  inline void set_has_success_number();
  inline void clear_has_success_number();
  inline void set_has_failed_number();
  inline void clear_has_failed_number();
  inline void set_has_time_cost();
  inline void clear_has_time_cost();
  inline void set_has_serial_number();
  inline void clear_has_serial_number();
  inline void set_has_model();
  inline void clear_has_model();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* cmd_;
  ::google::protobuf::int32 total_number_;
  ::google::protobuf::int32 success_number_;
  ::google::protobuf::int32 failed_number_;
  ::google::protobuf::int32 time_cost_;
  ::std::string* serial_number_;
  ::std::string* model_;
  ::google::protobuf::RepeatedPtrField< ::apk::FailTuple > fail_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_apk_5fprotomsg_2eproto();
  friend void protobuf_AssignDesc_apk_5fprotomsg_2eproto();
  friend void protobuf_ShutdownFile_apk_5fprotomsg_2eproto();

  void InitAsDefaultInstance();
  static CommandInstallApkDigest* default_instance_;
};
// -------------------------------------------------------------------

class OneApk : public ::google::protobuf::Message {
 public:
  OneApk();
  virtual ~OneApk();

  OneApk(const OneApk& from);

  inline OneApk& operator=(const OneApk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneApk& default_instance();

  void Swap(OneApk* other);

  // implements Message ----------------------------------------------

  OneApk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneApk& from);
  void MergeFrom(const OneApk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string url = 2;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 2;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // optional string md5 = 3;
  inline bool has_md5() const;
  inline void clear_md5();
  static const int kMd5FieldNumber = 3;
  inline const ::std::string& md5() const;
  inline void set_md5(const ::std::string& value);
  inline void set_md5(const char* value);
  inline void set_md5(const char* value, size_t size);
  inline ::std::string* mutable_md5();
  inline ::std::string* release_md5();
  inline void set_allocated_md5(::std::string* md5);

  // required string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string brief = 5;
  inline bool has_brief() const;
  inline void clear_brief();
  static const int kBriefFieldNumber = 5;
  inline const ::std::string& brief() const;
  inline void set_brief(const ::std::string& value);
  inline void set_brief(const char* value);
  inline void set_brief(const char* value, size_t size);
  inline ::std::string* mutable_brief();
  inline ::std::string* release_brief();
  inline void set_allocated_brief(::std::string* brief);

  // optional int32 orderid = 6;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderidFieldNumber = 6;
  inline ::google::protobuf::int32 orderid() const;
  inline void set_orderid(::google::protobuf::int32 value);

  // optional string update_time = 7;
  inline bool has_update_time() const;
  inline void clear_update_time();
  static const int kUpdateTimeFieldNumber = 7;
  inline const ::std::string& update_time() const;
  inline void set_update_time(const ::std::string& value);
  inline void set_update_time(const char* value);
  inline void set_update_time(const char* value, size_t size);
  inline ::std::string* mutable_update_time();
  inline ::std::string* release_update_time();
  inline void set_allocated_update_time(::std::string* update_time);

  // optional string create_time = 8;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 8;
  inline const ::std::string& create_time() const;
  inline void set_create_time(const ::std::string& value);
  inline void set_create_time(const char* value);
  inline void set_create_time(const char* value, size_t size);
  inline ::std::string* mutable_create_time();
  inline ::std::string* release_create_time();
  inline void set_allocated_create_time(::std::string* create_time);

  // required string apk_name = 9;
  inline bool has_apk_name() const;
  inline void clear_apk_name();
  static const int kApkNameFieldNumber = 9;
  inline const ::std::string& apk_name() const;
  inline void set_apk_name(const ::std::string& value);
  inline void set_apk_name(const char* value);
  inline void set_apk_name(const char* value, size_t size);
  inline ::std::string* mutable_apk_name();
  inline ::std::string* release_apk_name();
  inline void set_allocated_apk_name(::std::string* apk_name);

  // required double price = 10;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 10;
  inline double price() const;
  inline void set_price(double value);

  // required int32 type = 11;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 11;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required double package_size = 12;
  inline bool has_package_size() const;
  inline void clear_package_size();
  static const int kPackageSizeFieldNumber = 12;
  inline double package_size() const;
  inline void set_package_size(double value);

  // @@protoc_insertion_point(class_scope:apk.OneApk)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_md5();
  inline void clear_has_md5();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_brief();
  inline void clear_has_brief();
  inline void set_has_orderid();
  inline void clear_has_orderid();
  inline void set_has_update_time();
  inline void clear_has_update_time();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_apk_name();
  inline void clear_has_apk_name();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_package_size();
  inline void clear_has_package_size();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* url_;
  ::std::string* md5_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 orderid_;
  ::std::string* name_;
  ::std::string* brief_;
  ::std::string* update_time_;
  ::std::string* create_time_;
  ::std::string* apk_name_;
  double price_;
  double package_size_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_apk_5fprotomsg_2eproto();
  friend void protobuf_AssignDesc_apk_5fprotomsg_2eproto();
  friend void protobuf_ShutdownFile_apk_5fprotomsg_2eproto();

  void InitAsDefaultInstance();
  static OneApk* default_instance_;
};
// -------------------------------------------------------------------

class ApkList : public ::google::protobuf::Message {
 public:
  ApkList();
  virtual ~ApkList();

  ApkList(const ApkList& from);

  inline ApkList& operator=(const ApkList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ApkList& default_instance();

  void Swap(ApkList* other);

  // implements Message ----------------------------------------------

  ApkList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ApkList& from);
  void MergeFrom(const ApkList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .apk.CommandResponse head = 1;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 1;
  inline const ::apk::CommandResponse& head() const;
  inline ::apk::CommandResponse* mutable_head();
  inline ::apk::CommandResponse* release_head();
  inline void set_allocated_head(::apk::CommandResponse* head);

  // repeated .apk.OneApk apk_list = 2;
  inline int apk_list_size() const;
  inline void clear_apk_list();
  static const int kApkListFieldNumber = 2;
  inline const ::apk::OneApk& apk_list(int index) const;
  inline ::apk::OneApk* mutable_apk_list(int index);
  inline ::apk::OneApk* add_apk_list();
  inline const ::google::protobuf::RepeatedPtrField< ::apk::OneApk >&
      apk_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::apk::OneApk >*
      mutable_apk_list();

  // @@protoc_insertion_point(class_scope:apk.ApkList)
 private:
  inline void set_has_head();
  inline void clear_has_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::apk::CommandResponse* head_;
  ::google::protobuf::RepeatedPtrField< ::apk::OneApk > apk_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_apk_5fprotomsg_2eproto();
  friend void protobuf_AssignDesc_apk_5fprotomsg_2eproto();
  friend void protobuf_ShutdownFile_apk_5fprotomsg_2eproto();

  void InitAsDefaultInstance();
  static ApkList* default_instance_;
};
// -------------------------------------------------------------------

class AdbDevice : public ::google::protobuf::Message {
 public:
  AdbDevice();
  virtual ~AdbDevice();

  AdbDevice(const AdbDevice& from);

  inline AdbDevice& operator=(const AdbDevice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdbDevice& default_instance();

  void Swap(AdbDevice* other);

  // implements Message ----------------------------------------------

  AdbDevice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdbDevice& from);
  void MergeFrom(const AdbDevice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string serial_no = 1;
  inline bool has_serial_no() const;
  inline void clear_serial_no();
  static const int kSerialNoFieldNumber = 1;
  inline const ::std::string& serial_no() const;
  inline void set_serial_no(const ::std::string& value);
  inline void set_serial_no(const char* value);
  inline void set_serial_no(const char* value, size_t size);
  inline ::std::string* mutable_serial_no();
  inline ::std::string* release_serial_no();
  inline void set_allocated_serial_no(::std::string* serial_no);

  // optional string state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline const ::std::string& state() const;
  inline void set_state(const ::std::string& value);
  inline void set_state(const char* value);
  inline void set_state(const char* value, size_t size);
  inline ::std::string* mutable_state();
  inline ::std::string* release_state();
  inline void set_allocated_state(::std::string* state);

  // optional string model = 3;
  inline bool has_model() const;
  inline void clear_model();
  static const int kModelFieldNumber = 3;
  inline const ::std::string& model() const;
  inline void set_model(const ::std::string& value);
  inline void set_model(const char* value);
  inline void set_model(const char* value, size_t size);
  inline ::std::string* mutable_model();
  inline ::std::string* release_model();
  inline void set_allocated_model(::std::string* model);

  // optional string product = 4;
  inline bool has_product() const;
  inline void clear_product();
  static const int kProductFieldNumber = 4;
  inline const ::std::string& product() const;
  inline void set_product(const ::std::string& value);
  inline void set_product(const char* value);
  inline void set_product(const char* value, size_t size);
  inline ::std::string* mutable_product();
  inline ::std::string* release_product();
  inline void set_allocated_product(::std::string* product);

  // optional string device = 5;
  inline bool has_device() const;
  inline void clear_device();
  static const int kDeviceFieldNumber = 5;
  inline const ::std::string& device() const;
  inline void set_device(const ::std::string& value);
  inline void set_device(const char* value);
  inline void set_device(const char* value, size_t size);
  inline ::std::string* mutable_device();
  inline ::std::string* release_device();
  inline void set_allocated_device(::std::string* device);

  // @@protoc_insertion_point(class_scope:apk.AdbDevice)
 private:
  inline void set_has_serial_no();
  inline void clear_has_serial_no();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_model();
  inline void clear_has_model();
  inline void set_has_product();
  inline void clear_has_product();
  inline void set_has_device();
  inline void clear_has_device();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* serial_no_;
  ::std::string* state_;
  ::std::string* model_;
  ::std::string* product_;
  ::std::string* device_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_apk_5fprotomsg_2eproto();
  friend void protobuf_AssignDesc_apk_5fprotomsg_2eproto();
  friend void protobuf_ShutdownFile_apk_5fprotomsg_2eproto();

  void InitAsDefaultInstance();
  static AdbDevice* default_instance_;
};
// -------------------------------------------------------------------

class DevicesList : public ::google::protobuf::Message {
 public:
  DevicesList();
  virtual ~DevicesList();

  DevicesList(const DevicesList& from);

  inline DevicesList& operator=(const DevicesList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DevicesList& default_instance();

  void Swap(DevicesList* other);

  // implements Message ----------------------------------------------

  DevicesList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DevicesList& from);
  void MergeFrom(const DevicesList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .apk.CommandResponse head = 1;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 1;
  inline const ::apk::CommandResponse& head() const;
  inline ::apk::CommandResponse* mutable_head();
  inline ::apk::CommandResponse* release_head();
  inline void set_allocated_head(::apk::CommandResponse* head);

  // repeated .apk.AdbDevice devices_list = 2;
  inline int devices_list_size() const;
  inline void clear_devices_list();
  static const int kDevicesListFieldNumber = 2;
  inline const ::apk::AdbDevice& devices_list(int index) const;
  inline ::apk::AdbDevice* mutable_devices_list(int index);
  inline ::apk::AdbDevice* add_devices_list();
  inline const ::google::protobuf::RepeatedPtrField< ::apk::AdbDevice >&
      devices_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::apk::AdbDevice >*
      mutable_devices_list();

  // @@protoc_insertion_point(class_scope:apk.DevicesList)
 private:
  inline void set_has_head();
  inline void clear_has_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::apk::CommandResponse* head_;
  ::google::protobuf::RepeatedPtrField< ::apk::AdbDevice > devices_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_apk_5fprotomsg_2eproto();
  friend void protobuf_AssignDesc_apk_5fprotomsg_2eproto();
  friend void protobuf_ShutdownFile_apk_5fprotomsg_2eproto();

  void InitAsDefaultInstance();
  static DevicesList* default_instance_;
};
// ===================================================================


// ===================================================================

// Command

// required string cmd = 1;
inline bool Command::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Command::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Command::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Command::clear_cmd() {
  if (cmd_ != &::google::protobuf::internal::kEmptyString) {
    cmd_->clear();
  }
  clear_has_cmd();
}
inline const ::std::string& Command::cmd() const {
  return *cmd_;
}
inline void Command::set_cmd(const ::std::string& value) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(value);
}
inline void Command::set_cmd(const char* value) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(value);
}
inline void Command::set_cmd(const char* value, size_t size) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Command::mutable_cmd() {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  return cmd_;
}
inline ::std::string* Command::release_cmd() {
  clear_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = cmd_;
    cmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Command::set_allocated_cmd(::std::string* cmd) {
  if (cmd_ != &::google::protobuf::internal::kEmptyString) {
    delete cmd_;
  }
  if (cmd) {
    set_has_cmd();
    cmd_ = cmd;
  } else {
    clear_has_cmd();
    cmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 cmd_no = 2;
inline bool Command::has_cmd_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Command::set_has_cmd_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Command::clear_has_cmd_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Command::clear_cmd_no() {
  cmd_no_ = 0;
  clear_has_cmd_no();
}
inline ::google::protobuf::int32 Command::cmd_no() const {
  return cmd_no_;
}
inline void Command::set_cmd_no(::google::protobuf::int32 value) {
  set_has_cmd_no();
  cmd_no_ = value;
}

// optional int32 sub_cmd_no = 3;
inline bool Command::has_sub_cmd_no() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Command::set_has_sub_cmd_no() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Command::clear_has_sub_cmd_no() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Command::clear_sub_cmd_no() {
  sub_cmd_no_ = 0;
  clear_has_sub_cmd_no();
}
inline ::google::protobuf::int32 Command::sub_cmd_no() const {
  return sub_cmd_no_;
}
inline void Command::set_sub_cmd_no(::google::protobuf::int32 value) {
  set_has_sub_cmd_no();
  sub_cmd_no_ = value;
}

// required int64 timestamp = 4;
inline bool Command::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Command::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Command::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Command::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 Command::timestamp() const {
  return timestamp_;
}
inline void Command::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// repeated string param = 5;
inline int Command::param_size() const {
  return param_.size();
}
inline void Command::clear_param() {
  param_.Clear();
}
inline const ::std::string& Command::param(int index) const {
  return param_.Get(index);
}
inline ::std::string* Command::mutable_param(int index) {
  return param_.Mutable(index);
}
inline void Command::set_param(int index, const ::std::string& value) {
  param_.Mutable(index)->assign(value);
}
inline void Command::set_param(int index, const char* value) {
  param_.Mutable(index)->assign(value);
}
inline void Command::set_param(int index, const char* value, size_t size) {
  param_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Command::add_param() {
  return param_.Add();
}
inline void Command::add_param(const ::std::string& value) {
  param_.Add()->assign(value);
}
inline void Command::add_param(const char* value) {
  param_.Add()->assign(value);
}
inline void Command::add_param(const char* value, size_t size) {
  param_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Command::param() const {
  return param_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Command::mutable_param() {
  return &param_;
}

// -------------------------------------------------------------------

// CommandResponse

// required string cmd = 1;
inline bool CommandResponse::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommandResponse::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommandResponse::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommandResponse::clear_cmd() {
  if (cmd_ != &::google::protobuf::internal::kEmptyString) {
    cmd_->clear();
  }
  clear_has_cmd();
}
inline const ::std::string& CommandResponse::cmd() const {
  return *cmd_;
}
inline void CommandResponse::set_cmd(const ::std::string& value) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(value);
}
inline void CommandResponse::set_cmd(const char* value) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(value);
}
inline void CommandResponse::set_cmd(const char* value, size_t size) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CommandResponse::mutable_cmd() {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  return cmd_;
}
inline ::std::string* CommandResponse::release_cmd() {
  clear_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = cmd_;
    cmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CommandResponse::set_allocated_cmd(::std::string* cmd) {
  if (cmd_ != &::google::protobuf::internal::kEmptyString) {
    delete cmd_;
  }
  if (cmd) {
    set_has_cmd();
    cmd_ = cmd;
  } else {
    clear_has_cmd();
    cmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 cmd_no = 2;
inline bool CommandResponse::has_cmd_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommandResponse::set_has_cmd_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommandResponse::clear_has_cmd_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommandResponse::clear_cmd_no() {
  cmd_no_ = 0;
  clear_has_cmd_no();
}
inline ::google::protobuf::int32 CommandResponse::cmd_no() const {
  return cmd_no_;
}
inline void CommandResponse::set_cmd_no(::google::protobuf::int32 value) {
  set_has_cmd_no();
  cmd_no_ = value;
}

// required int32 sub_cmd_no = 3;
inline bool CommandResponse::has_sub_cmd_no() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CommandResponse::set_has_sub_cmd_no() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CommandResponse::clear_has_sub_cmd_no() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CommandResponse::clear_sub_cmd_no() {
  sub_cmd_no_ = 0;
  clear_has_sub_cmd_no();
}
inline ::google::protobuf::int32 CommandResponse::sub_cmd_no() const {
  return sub_cmd_no_;
}
inline void CommandResponse::set_sub_cmd_no(::google::protobuf::int32 value) {
  set_has_sub_cmd_no();
  sub_cmd_no_ = value;
}

// required int32 code = 4;
inline bool CommandResponse::has_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CommandResponse::set_has_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CommandResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CommandResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 CommandResponse::code() const {
  return code_;
}
inline void CommandResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// optional int64 time_cost = 5;
inline bool CommandResponse::has_time_cost() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CommandResponse::set_has_time_cost() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CommandResponse::clear_has_time_cost() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CommandResponse::clear_time_cost() {
  time_cost_ = GOOGLE_LONGLONG(0);
  clear_has_time_cost();
}
inline ::google::protobuf::int64 CommandResponse::time_cost() const {
  return time_cost_;
}
inline void CommandResponse::set_time_cost(::google::protobuf::int64 value) {
  set_has_time_cost();
  time_cost_ = value;
}

// repeated string info = 6;
inline int CommandResponse::info_size() const {
  return info_.size();
}
inline void CommandResponse::clear_info() {
  info_.Clear();
}
inline const ::std::string& CommandResponse::info(int index) const {
  return info_.Get(index);
}
inline ::std::string* CommandResponse::mutable_info(int index) {
  return info_.Mutable(index);
}
inline void CommandResponse::set_info(int index, const ::std::string& value) {
  info_.Mutable(index)->assign(value);
}
inline void CommandResponse::set_info(int index, const char* value) {
  info_.Mutable(index)->assign(value);
}
inline void CommandResponse::set_info(int index, const char* value, size_t size) {
  info_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CommandResponse::add_info() {
  return info_.Add();
}
inline void CommandResponse::add_info(const ::std::string& value) {
  info_.Add()->assign(value);
}
inline void CommandResponse::add_info(const char* value) {
  info_.Add()->assign(value);
}
inline void CommandResponse::add_info(const char* value, size_t size) {
  info_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CommandResponse::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CommandResponse::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// CommandInstallApkResponse

// required string cmd = 1;
inline bool CommandInstallApkResponse::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommandInstallApkResponse::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommandInstallApkResponse::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommandInstallApkResponse::clear_cmd() {
  if (cmd_ != &::google::protobuf::internal::kEmptyString) {
    cmd_->clear();
  }
  clear_has_cmd();
}
inline const ::std::string& CommandInstallApkResponse::cmd() const {
  return *cmd_;
}
inline void CommandInstallApkResponse::set_cmd(const ::std::string& value) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(value);
}
inline void CommandInstallApkResponse::set_cmd(const char* value) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(value);
}
inline void CommandInstallApkResponse::set_cmd(const char* value, size_t size) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CommandInstallApkResponse::mutable_cmd() {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  return cmd_;
}
inline ::std::string* CommandInstallApkResponse::release_cmd() {
  clear_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = cmd_;
    cmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CommandInstallApkResponse::set_allocated_cmd(::std::string* cmd) {
  if (cmd_ != &::google::protobuf::internal::kEmptyString) {
    delete cmd_;
  }
  if (cmd) {
    set_has_cmd();
    cmd_ = cmd;
  } else {
    clear_has_cmd();
    cmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 cmd_no = 2;
inline bool CommandInstallApkResponse::has_cmd_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommandInstallApkResponse::set_has_cmd_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommandInstallApkResponse::clear_has_cmd_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommandInstallApkResponse::clear_cmd_no() {
  cmd_no_ = 0;
  clear_has_cmd_no();
}
inline ::google::protobuf::int32 CommandInstallApkResponse::cmd_no() const {
  return cmd_no_;
}
inline void CommandInstallApkResponse::set_cmd_no(::google::protobuf::int32 value) {
  set_has_cmd_no();
  cmd_no_ = value;
}

// required int32 sub_cmd_no = 3;
inline bool CommandInstallApkResponse::has_sub_cmd_no() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CommandInstallApkResponse::set_has_sub_cmd_no() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CommandInstallApkResponse::clear_has_sub_cmd_no() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CommandInstallApkResponse::clear_sub_cmd_no() {
  sub_cmd_no_ = 0;
  clear_has_sub_cmd_no();
}
inline ::google::protobuf::int32 CommandInstallApkResponse::sub_cmd_no() const {
  return sub_cmd_no_;
}
inline void CommandInstallApkResponse::set_sub_cmd_no(::google::protobuf::int32 value) {
  set_has_sub_cmd_no();
  sub_cmd_no_ = value;
}

// required int32 code = 4;
inline bool CommandInstallApkResponse::has_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CommandInstallApkResponse::set_has_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CommandInstallApkResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CommandInstallApkResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 CommandInstallApkResponse::code() const {
  return code_;
}
inline void CommandInstallApkResponse::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// optional int64 time_cost = 5;
inline bool CommandInstallApkResponse::has_time_cost() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CommandInstallApkResponse::set_has_time_cost() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CommandInstallApkResponse::clear_has_time_cost() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CommandInstallApkResponse::clear_time_cost() {
  time_cost_ = GOOGLE_LONGLONG(0);
  clear_has_time_cost();
}
inline ::google::protobuf::int64 CommandInstallApkResponse::time_cost() const {
  return time_cost_;
}
inline void CommandInstallApkResponse::set_time_cost(::google::protobuf::int64 value) {
  set_has_time_cost();
  time_cost_ = value;
}

// required string package_name = 6;
inline bool CommandInstallApkResponse::has_package_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CommandInstallApkResponse::set_has_package_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CommandInstallApkResponse::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CommandInstallApkResponse::clear_package_name() {
  if (package_name_ != &::google::protobuf::internal::kEmptyString) {
    package_name_->clear();
  }
  clear_has_package_name();
}
inline const ::std::string& CommandInstallApkResponse::package_name() const {
  return *package_name_;
}
inline void CommandInstallApkResponse::set_package_name(const ::std::string& value) {
  set_has_package_name();
  if (package_name_ == &::google::protobuf::internal::kEmptyString) {
    package_name_ = new ::std::string;
  }
  package_name_->assign(value);
}
inline void CommandInstallApkResponse::set_package_name(const char* value) {
  set_has_package_name();
  if (package_name_ == &::google::protobuf::internal::kEmptyString) {
    package_name_ = new ::std::string;
  }
  package_name_->assign(value);
}
inline void CommandInstallApkResponse::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  if (package_name_ == &::google::protobuf::internal::kEmptyString) {
    package_name_ = new ::std::string;
  }
  package_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CommandInstallApkResponse::mutable_package_name() {
  set_has_package_name();
  if (package_name_ == &::google::protobuf::internal::kEmptyString) {
    package_name_ = new ::std::string;
  }
  return package_name_;
}
inline ::std::string* CommandInstallApkResponse::release_package_name() {
  clear_has_package_name();
  if (package_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = package_name_;
    package_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CommandInstallApkResponse::set_allocated_package_name(::std::string* package_name) {
  if (package_name_ != &::google::protobuf::internal::kEmptyString) {
    delete package_name_;
  }
  if (package_name) {
    set_has_package_name();
    package_name_ = package_name;
  } else {
    clear_has_package_name();
    package_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string progress = 7;
inline bool CommandInstallApkResponse::has_progress() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CommandInstallApkResponse::set_has_progress() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CommandInstallApkResponse::clear_has_progress() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CommandInstallApkResponse::clear_progress() {
  if (progress_ != &::google::protobuf::internal::kEmptyString) {
    progress_->clear();
  }
  clear_has_progress();
}
inline const ::std::string& CommandInstallApkResponse::progress() const {
  return *progress_;
}
inline void CommandInstallApkResponse::set_progress(const ::std::string& value) {
  set_has_progress();
  if (progress_ == &::google::protobuf::internal::kEmptyString) {
    progress_ = new ::std::string;
  }
  progress_->assign(value);
}
inline void CommandInstallApkResponse::set_progress(const char* value) {
  set_has_progress();
  if (progress_ == &::google::protobuf::internal::kEmptyString) {
    progress_ = new ::std::string;
  }
  progress_->assign(value);
}
inline void CommandInstallApkResponse::set_progress(const char* value, size_t size) {
  set_has_progress();
  if (progress_ == &::google::protobuf::internal::kEmptyString) {
    progress_ = new ::std::string;
  }
  progress_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CommandInstallApkResponse::mutable_progress() {
  set_has_progress();
  if (progress_ == &::google::protobuf::internal::kEmptyString) {
    progress_ = new ::std::string;
  }
  return progress_;
}
inline ::std::string* CommandInstallApkResponse::release_progress() {
  clear_has_progress();
  if (progress_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = progress_;
    progress_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CommandInstallApkResponse::set_allocated_progress(::std::string* progress) {
  if (progress_ != &::google::protobuf::internal::kEmptyString) {
    delete progress_;
  }
  if (progress) {
    set_has_progress();
    progress_ = progress;
  } else {
    clear_has_progress();
    progress_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string type = 8;
inline bool CommandInstallApkResponse::has_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CommandInstallApkResponse::set_has_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CommandInstallApkResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CommandInstallApkResponse::clear_type() {
  if (type_ != &::google::protobuf::internal::kEmptyString) {
    type_->clear();
  }
  clear_has_type();
}
inline const ::std::string& CommandInstallApkResponse::type() const {
  return *type_;
}
inline void CommandInstallApkResponse::set_type(const ::std::string& value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void CommandInstallApkResponse::set_type(const char* value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void CommandInstallApkResponse::set_type(const char* value, size_t size) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CommandInstallApkResponse::mutable_type() {
  set_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    type_ = new ::std::string;
  }
  return type_;
}
inline ::std::string* CommandInstallApkResponse::release_type() {
  clear_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = type_;
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CommandInstallApkResponse::set_allocated_type(::std::string* type) {
  if (type_ != &::google::protobuf::internal::kEmptyString) {
    delete type_;
  }
  if (type) {
    set_has_type();
    type_ = type;
  } else {
    clear_has_type();
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string serial_number = 9;
inline bool CommandInstallApkResponse::has_serial_number() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CommandInstallApkResponse::set_has_serial_number() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CommandInstallApkResponse::clear_has_serial_number() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CommandInstallApkResponse::clear_serial_number() {
  if (serial_number_ != &::google::protobuf::internal::kEmptyString) {
    serial_number_->clear();
  }
  clear_has_serial_number();
}
inline const ::std::string& CommandInstallApkResponse::serial_number() const {
  return *serial_number_;
}
inline void CommandInstallApkResponse::set_serial_number(const ::std::string& value) {
  set_has_serial_number();
  if (serial_number_ == &::google::protobuf::internal::kEmptyString) {
    serial_number_ = new ::std::string;
  }
  serial_number_->assign(value);
}
inline void CommandInstallApkResponse::set_serial_number(const char* value) {
  set_has_serial_number();
  if (serial_number_ == &::google::protobuf::internal::kEmptyString) {
    serial_number_ = new ::std::string;
  }
  serial_number_->assign(value);
}
inline void CommandInstallApkResponse::set_serial_number(const char* value, size_t size) {
  set_has_serial_number();
  if (serial_number_ == &::google::protobuf::internal::kEmptyString) {
    serial_number_ = new ::std::string;
  }
  serial_number_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CommandInstallApkResponse::mutable_serial_number() {
  set_has_serial_number();
  if (serial_number_ == &::google::protobuf::internal::kEmptyString) {
    serial_number_ = new ::std::string;
  }
  return serial_number_;
}
inline ::std::string* CommandInstallApkResponse::release_serial_number() {
  clear_has_serial_number();
  if (serial_number_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = serial_number_;
    serial_number_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CommandInstallApkResponse::set_allocated_serial_number(::std::string* serial_number) {
  if (serial_number_ != &::google::protobuf::internal::kEmptyString) {
    delete serial_number_;
  }
  if (serial_number) {
    set_has_serial_number();
    serial_number_ = serial_number;
  } else {
    clear_has_serial_number();
    serial_number_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 time_max = 10;
inline bool CommandInstallApkResponse::has_time_max() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CommandInstallApkResponse::set_has_time_max() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CommandInstallApkResponse::clear_has_time_max() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CommandInstallApkResponse::clear_time_max() {
  time_max_ = 0;
  clear_has_time_max();
}
inline ::google::protobuf::int32 CommandInstallApkResponse::time_max() const {
  return time_max_;
}
inline void CommandInstallApkResponse::set_time_max(::google::protobuf::int32 value) {
  set_has_time_max();
  time_max_ = value;
}

// required double package_size = 11;
inline bool CommandInstallApkResponse::has_package_size() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CommandInstallApkResponse::set_has_package_size() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CommandInstallApkResponse::clear_has_package_size() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CommandInstallApkResponse::clear_package_size() {
  package_size_ = 0;
  clear_has_package_size();
}
inline double CommandInstallApkResponse::package_size() const {
  return package_size_;
}
inline void CommandInstallApkResponse::set_package_size(double value) {
  set_has_package_size();
  package_size_ = value;
}

// required string adb_message = 12;
inline bool CommandInstallApkResponse::has_adb_message() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CommandInstallApkResponse::set_has_adb_message() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CommandInstallApkResponse::clear_has_adb_message() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CommandInstallApkResponse::clear_adb_message() {
  if (adb_message_ != &::google::protobuf::internal::kEmptyString) {
    adb_message_->clear();
  }
  clear_has_adb_message();
}
inline const ::std::string& CommandInstallApkResponse::adb_message() const {
  return *adb_message_;
}
inline void CommandInstallApkResponse::set_adb_message(const ::std::string& value) {
  set_has_adb_message();
  if (adb_message_ == &::google::protobuf::internal::kEmptyString) {
    adb_message_ = new ::std::string;
  }
  adb_message_->assign(value);
}
inline void CommandInstallApkResponse::set_adb_message(const char* value) {
  set_has_adb_message();
  if (adb_message_ == &::google::protobuf::internal::kEmptyString) {
    adb_message_ = new ::std::string;
  }
  adb_message_->assign(value);
}
inline void CommandInstallApkResponse::set_adb_message(const char* value, size_t size) {
  set_has_adb_message();
  if (adb_message_ == &::google::protobuf::internal::kEmptyString) {
    adb_message_ = new ::std::string;
  }
  adb_message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CommandInstallApkResponse::mutable_adb_message() {
  set_has_adb_message();
  if (adb_message_ == &::google::protobuf::internal::kEmptyString) {
    adb_message_ = new ::std::string;
  }
  return adb_message_;
}
inline ::std::string* CommandInstallApkResponse::release_adb_message() {
  clear_has_adb_message();
  if (adb_message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = adb_message_;
    adb_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CommandInstallApkResponse::set_allocated_adb_message(::std::string* adb_message) {
  if (adb_message_ != &::google::protobuf::internal::kEmptyString) {
    delete adb_message_;
  }
  if (adb_message) {
    set_has_adb_message();
    adb_message_ = adb_message;
  } else {
    clear_has_adb_message();
    adb_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string stage = 13;
inline bool CommandInstallApkResponse::has_stage() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CommandInstallApkResponse::set_has_stage() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CommandInstallApkResponse::clear_has_stage() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CommandInstallApkResponse::clear_stage() {
  if (stage_ != &::google::protobuf::internal::kEmptyString) {
    stage_->clear();
  }
  clear_has_stage();
}
inline const ::std::string& CommandInstallApkResponse::stage() const {
  return *stage_;
}
inline void CommandInstallApkResponse::set_stage(const ::std::string& value) {
  set_has_stage();
  if (stage_ == &::google::protobuf::internal::kEmptyString) {
    stage_ = new ::std::string;
  }
  stage_->assign(value);
}
inline void CommandInstallApkResponse::set_stage(const char* value) {
  set_has_stage();
  if (stage_ == &::google::protobuf::internal::kEmptyString) {
    stage_ = new ::std::string;
  }
  stage_->assign(value);
}
inline void CommandInstallApkResponse::set_stage(const char* value, size_t size) {
  set_has_stage();
  if (stage_ == &::google::protobuf::internal::kEmptyString) {
    stage_ = new ::std::string;
  }
  stage_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CommandInstallApkResponse::mutable_stage() {
  set_has_stage();
  if (stage_ == &::google::protobuf::internal::kEmptyString) {
    stage_ = new ::std::string;
  }
  return stage_;
}
inline ::std::string* CommandInstallApkResponse::release_stage() {
  clear_has_stage();
  if (stage_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stage_;
    stage_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CommandInstallApkResponse::set_allocated_stage(::std::string* stage) {
  if (stage_ != &::google::protobuf::internal::kEmptyString) {
    delete stage_;
  }
  if (stage) {
    set_has_stage();
    stage_ = stage;
  } else {
    clear_has_stage();
    stage_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated string info = 14;
inline int CommandInstallApkResponse::info_size() const {
  return info_.size();
}
inline void CommandInstallApkResponse::clear_info() {
  info_.Clear();
}
inline const ::std::string& CommandInstallApkResponse::info(int index) const {
  return info_.Get(index);
}
inline ::std::string* CommandInstallApkResponse::mutable_info(int index) {
  return info_.Mutable(index);
}
inline void CommandInstallApkResponse::set_info(int index, const ::std::string& value) {
  info_.Mutable(index)->assign(value);
}
inline void CommandInstallApkResponse::set_info(int index, const char* value) {
  info_.Mutable(index)->assign(value);
}
inline void CommandInstallApkResponse::set_info(int index, const char* value, size_t size) {
  info_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CommandInstallApkResponse::add_info() {
  return info_.Add();
}
inline void CommandInstallApkResponse::add_info(const ::std::string& value) {
  info_.Add()->assign(value);
}
inline void CommandInstallApkResponse::add_info(const char* value) {
  info_.Add()->assign(value);
}
inline void CommandInstallApkResponse::add_info(const char* value, size_t size) {
  info_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CommandInstallApkResponse::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CommandInstallApkResponse::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// FailTuple

// required string package_name = 1;
inline bool FailTuple::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FailTuple::set_has_package_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FailTuple::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FailTuple::clear_package_name() {
  if (package_name_ != &::google::protobuf::internal::kEmptyString) {
    package_name_->clear();
  }
  clear_has_package_name();
}
inline const ::std::string& FailTuple::package_name() const {
  return *package_name_;
}
inline void FailTuple::set_package_name(const ::std::string& value) {
  set_has_package_name();
  if (package_name_ == &::google::protobuf::internal::kEmptyString) {
    package_name_ = new ::std::string;
  }
  package_name_->assign(value);
}
inline void FailTuple::set_package_name(const char* value) {
  set_has_package_name();
  if (package_name_ == &::google::protobuf::internal::kEmptyString) {
    package_name_ = new ::std::string;
  }
  package_name_->assign(value);
}
inline void FailTuple::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  if (package_name_ == &::google::protobuf::internal::kEmptyString) {
    package_name_ = new ::std::string;
  }
  package_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FailTuple::mutable_package_name() {
  set_has_package_name();
  if (package_name_ == &::google::protobuf::internal::kEmptyString) {
    package_name_ = new ::std::string;
  }
  return package_name_;
}
inline ::std::string* FailTuple::release_package_name() {
  clear_has_package_name();
  if (package_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = package_name_;
    package_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FailTuple::set_allocated_package_name(::std::string* package_name) {
  if (package_name_ != &::google::protobuf::internal::kEmptyString) {
    delete package_name_;
  }
  if (package_name) {
    set_has_package_name();
    package_name_ = package_name;
  } else {
    clear_has_package_name();
    package_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string app_name = 2;
inline bool FailTuple::has_app_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FailTuple::set_has_app_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FailTuple::clear_has_app_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FailTuple::clear_app_name() {
  if (app_name_ != &::google::protobuf::internal::kEmptyString) {
    app_name_->clear();
  }
  clear_has_app_name();
}
inline const ::std::string& FailTuple::app_name() const {
  return *app_name_;
}
inline void FailTuple::set_app_name(const ::std::string& value) {
  set_has_app_name();
  if (app_name_ == &::google::protobuf::internal::kEmptyString) {
    app_name_ = new ::std::string;
  }
  app_name_->assign(value);
}
inline void FailTuple::set_app_name(const char* value) {
  set_has_app_name();
  if (app_name_ == &::google::protobuf::internal::kEmptyString) {
    app_name_ = new ::std::string;
  }
  app_name_->assign(value);
}
inline void FailTuple::set_app_name(const char* value, size_t size) {
  set_has_app_name();
  if (app_name_ == &::google::protobuf::internal::kEmptyString) {
    app_name_ = new ::std::string;
  }
  app_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FailTuple::mutable_app_name() {
  set_has_app_name();
  if (app_name_ == &::google::protobuf::internal::kEmptyString) {
    app_name_ = new ::std::string;
  }
  return app_name_;
}
inline ::std::string* FailTuple::release_app_name() {
  clear_has_app_name();
  if (app_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = app_name_;
    app_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FailTuple::set_allocated_app_name(::std::string* app_name) {
  if (app_name_ != &::google::protobuf::internal::kEmptyString) {
    delete app_name_;
  }
  if (app_name) {
    set_has_app_name();
    app_name_ = app_name;
  } else {
    clear_has_app_name();
    app_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string adb_message = 3;
inline bool FailTuple::has_adb_message() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FailTuple::set_has_adb_message() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FailTuple::clear_has_adb_message() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FailTuple::clear_adb_message() {
  if (adb_message_ != &::google::protobuf::internal::kEmptyString) {
    adb_message_->clear();
  }
  clear_has_adb_message();
}
inline const ::std::string& FailTuple::adb_message() const {
  return *adb_message_;
}
inline void FailTuple::set_adb_message(const ::std::string& value) {
  set_has_adb_message();
  if (adb_message_ == &::google::protobuf::internal::kEmptyString) {
    adb_message_ = new ::std::string;
  }
  adb_message_->assign(value);
}
inline void FailTuple::set_adb_message(const char* value) {
  set_has_adb_message();
  if (adb_message_ == &::google::protobuf::internal::kEmptyString) {
    adb_message_ = new ::std::string;
  }
  adb_message_->assign(value);
}
inline void FailTuple::set_adb_message(const char* value, size_t size) {
  set_has_adb_message();
  if (adb_message_ == &::google::protobuf::internal::kEmptyString) {
    adb_message_ = new ::std::string;
  }
  adb_message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FailTuple::mutable_adb_message() {
  set_has_adb_message();
  if (adb_message_ == &::google::protobuf::internal::kEmptyString) {
    adb_message_ = new ::std::string;
  }
  return adb_message_;
}
inline ::std::string* FailTuple::release_adb_message() {
  clear_has_adb_message();
  if (adb_message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = adb_message_;
    adb_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FailTuple::set_allocated_adb_message(::std::string* adb_message) {
  if (adb_message_ != &::google::protobuf::internal::kEmptyString) {
    delete adb_message_;
  }
  if (adb_message) {
    set_has_adb_message();
    adb_message_ = adb_message;
  } else {
    clear_has_adb_message();
    adb_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string user_message = 4;
inline bool FailTuple::has_user_message() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FailTuple::set_has_user_message() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FailTuple::clear_has_user_message() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FailTuple::clear_user_message() {
  if (user_message_ != &::google::protobuf::internal::kEmptyString) {
    user_message_->clear();
  }
  clear_has_user_message();
}
inline const ::std::string& FailTuple::user_message() const {
  return *user_message_;
}
inline void FailTuple::set_user_message(const ::std::string& value) {
  set_has_user_message();
  if (user_message_ == &::google::protobuf::internal::kEmptyString) {
    user_message_ = new ::std::string;
  }
  user_message_->assign(value);
}
inline void FailTuple::set_user_message(const char* value) {
  set_has_user_message();
  if (user_message_ == &::google::protobuf::internal::kEmptyString) {
    user_message_ = new ::std::string;
  }
  user_message_->assign(value);
}
inline void FailTuple::set_user_message(const char* value, size_t size) {
  set_has_user_message();
  if (user_message_ == &::google::protobuf::internal::kEmptyString) {
    user_message_ = new ::std::string;
  }
  user_message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FailTuple::mutable_user_message() {
  set_has_user_message();
  if (user_message_ == &::google::protobuf::internal::kEmptyString) {
    user_message_ = new ::std::string;
  }
  return user_message_;
}
inline ::std::string* FailTuple::release_user_message() {
  clear_has_user_message();
  if (user_message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_message_;
    user_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FailTuple::set_allocated_user_message(::std::string* user_message) {
  if (user_message_ != &::google::protobuf::internal::kEmptyString) {
    delete user_message_;
  }
  if (user_message) {
    set_has_user_message();
    user_message_ = user_message;
  } else {
    clear_has_user_message();
    user_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 try_times = 5;
inline bool FailTuple::has_try_times() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FailTuple::set_has_try_times() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FailTuple::clear_has_try_times() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FailTuple::clear_try_times() {
  try_times_ = 0;
  clear_has_try_times();
}
inline ::google::protobuf::int32 FailTuple::try_times() const {
  return try_times_;
}
inline void FailTuple::set_try_times(::google::protobuf::int32 value) {
  set_has_try_times();
  try_times_ = value;
}

// -------------------------------------------------------------------

// CommandInstallApkDigest

// required string cmd = 1;
inline bool CommandInstallApkDigest::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommandInstallApkDigest::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommandInstallApkDigest::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommandInstallApkDigest::clear_cmd() {
  if (cmd_ != &::google::protobuf::internal::kEmptyString) {
    cmd_->clear();
  }
  clear_has_cmd();
}
inline const ::std::string& CommandInstallApkDigest::cmd() const {
  return *cmd_;
}
inline void CommandInstallApkDigest::set_cmd(const ::std::string& value) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(value);
}
inline void CommandInstallApkDigest::set_cmd(const char* value) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(value);
}
inline void CommandInstallApkDigest::set_cmd(const char* value, size_t size) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CommandInstallApkDigest::mutable_cmd() {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    cmd_ = new ::std::string;
  }
  return cmd_;
}
inline ::std::string* CommandInstallApkDigest::release_cmd() {
  clear_has_cmd();
  if (cmd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = cmd_;
    cmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CommandInstallApkDigest::set_allocated_cmd(::std::string* cmd) {
  if (cmd_ != &::google::protobuf::internal::kEmptyString) {
    delete cmd_;
  }
  if (cmd) {
    set_has_cmd();
    cmd_ = cmd;
  } else {
    clear_has_cmd();
    cmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 total_number = 2;
inline bool CommandInstallApkDigest::has_total_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommandInstallApkDigest::set_has_total_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommandInstallApkDigest::clear_has_total_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommandInstallApkDigest::clear_total_number() {
  total_number_ = 0;
  clear_has_total_number();
}
inline ::google::protobuf::int32 CommandInstallApkDigest::total_number() const {
  return total_number_;
}
inline void CommandInstallApkDigest::set_total_number(::google::protobuf::int32 value) {
  set_has_total_number();
  total_number_ = value;
}

// required int32 success_number = 3;
inline bool CommandInstallApkDigest::has_success_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CommandInstallApkDigest::set_has_success_number() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CommandInstallApkDigest::clear_has_success_number() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CommandInstallApkDigest::clear_success_number() {
  success_number_ = 0;
  clear_has_success_number();
}
inline ::google::protobuf::int32 CommandInstallApkDigest::success_number() const {
  return success_number_;
}
inline void CommandInstallApkDigest::set_success_number(::google::protobuf::int32 value) {
  set_has_success_number();
  success_number_ = value;
}

// required int32 failed_number = 4;
inline bool CommandInstallApkDigest::has_failed_number() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CommandInstallApkDigest::set_has_failed_number() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CommandInstallApkDigest::clear_has_failed_number() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CommandInstallApkDigest::clear_failed_number() {
  failed_number_ = 0;
  clear_has_failed_number();
}
inline ::google::protobuf::int32 CommandInstallApkDigest::failed_number() const {
  return failed_number_;
}
inline void CommandInstallApkDigest::set_failed_number(::google::protobuf::int32 value) {
  set_has_failed_number();
  failed_number_ = value;
}

// required int32 time_cost = 5;
inline bool CommandInstallApkDigest::has_time_cost() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CommandInstallApkDigest::set_has_time_cost() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CommandInstallApkDigest::clear_has_time_cost() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CommandInstallApkDigest::clear_time_cost() {
  time_cost_ = 0;
  clear_has_time_cost();
}
inline ::google::protobuf::int32 CommandInstallApkDigest::time_cost() const {
  return time_cost_;
}
inline void CommandInstallApkDigest::set_time_cost(::google::protobuf::int32 value) {
  set_has_time_cost();
  time_cost_ = value;
}

// required string serial_number = 6;
inline bool CommandInstallApkDigest::has_serial_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CommandInstallApkDigest::set_has_serial_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CommandInstallApkDigest::clear_has_serial_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CommandInstallApkDigest::clear_serial_number() {
  if (serial_number_ != &::google::protobuf::internal::kEmptyString) {
    serial_number_->clear();
  }
  clear_has_serial_number();
}
inline const ::std::string& CommandInstallApkDigest::serial_number() const {
  return *serial_number_;
}
inline void CommandInstallApkDigest::set_serial_number(const ::std::string& value) {
  set_has_serial_number();
  if (serial_number_ == &::google::protobuf::internal::kEmptyString) {
    serial_number_ = new ::std::string;
  }
  serial_number_->assign(value);
}
inline void CommandInstallApkDigest::set_serial_number(const char* value) {
  set_has_serial_number();
  if (serial_number_ == &::google::protobuf::internal::kEmptyString) {
    serial_number_ = new ::std::string;
  }
  serial_number_->assign(value);
}
inline void CommandInstallApkDigest::set_serial_number(const char* value, size_t size) {
  set_has_serial_number();
  if (serial_number_ == &::google::protobuf::internal::kEmptyString) {
    serial_number_ = new ::std::string;
  }
  serial_number_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CommandInstallApkDigest::mutable_serial_number() {
  set_has_serial_number();
  if (serial_number_ == &::google::protobuf::internal::kEmptyString) {
    serial_number_ = new ::std::string;
  }
  return serial_number_;
}
inline ::std::string* CommandInstallApkDigest::release_serial_number() {
  clear_has_serial_number();
  if (serial_number_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = serial_number_;
    serial_number_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CommandInstallApkDigest::set_allocated_serial_number(::std::string* serial_number) {
  if (serial_number_ != &::google::protobuf::internal::kEmptyString) {
    delete serial_number_;
  }
  if (serial_number) {
    set_has_serial_number();
    serial_number_ = serial_number;
  } else {
    clear_has_serial_number();
    serial_number_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string model = 7;
inline bool CommandInstallApkDigest::has_model() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CommandInstallApkDigest::set_has_model() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CommandInstallApkDigest::clear_has_model() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CommandInstallApkDigest::clear_model() {
  if (model_ != &::google::protobuf::internal::kEmptyString) {
    model_->clear();
  }
  clear_has_model();
}
inline const ::std::string& CommandInstallApkDigest::model() const {
  return *model_;
}
inline void CommandInstallApkDigest::set_model(const ::std::string& value) {
  set_has_model();
  if (model_ == &::google::protobuf::internal::kEmptyString) {
    model_ = new ::std::string;
  }
  model_->assign(value);
}
inline void CommandInstallApkDigest::set_model(const char* value) {
  set_has_model();
  if (model_ == &::google::protobuf::internal::kEmptyString) {
    model_ = new ::std::string;
  }
  model_->assign(value);
}
inline void CommandInstallApkDigest::set_model(const char* value, size_t size) {
  set_has_model();
  if (model_ == &::google::protobuf::internal::kEmptyString) {
    model_ = new ::std::string;
  }
  model_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CommandInstallApkDigest::mutable_model() {
  set_has_model();
  if (model_ == &::google::protobuf::internal::kEmptyString) {
    model_ = new ::std::string;
  }
  return model_;
}
inline ::std::string* CommandInstallApkDigest::release_model() {
  clear_has_model();
  if (model_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = model_;
    model_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CommandInstallApkDigest::set_allocated_model(::std::string* model) {
  if (model_ != &::google::protobuf::internal::kEmptyString) {
    delete model_;
  }
  if (model) {
    set_has_model();
    model_ = model;
  } else {
    clear_has_model();
    model_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .apk.FailTuple fail_list = 8;
inline int CommandInstallApkDigest::fail_list_size() const {
  return fail_list_.size();
}
inline void CommandInstallApkDigest::clear_fail_list() {
  fail_list_.Clear();
}
inline const ::apk::FailTuple& CommandInstallApkDigest::fail_list(int index) const {
  return fail_list_.Get(index);
}
inline ::apk::FailTuple* CommandInstallApkDigest::mutable_fail_list(int index) {
  return fail_list_.Mutable(index);
}
inline ::apk::FailTuple* CommandInstallApkDigest::add_fail_list() {
  return fail_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::apk::FailTuple >&
CommandInstallApkDigest::fail_list() const {
  return fail_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::apk::FailTuple >*
CommandInstallApkDigest::mutable_fail_list() {
  return &fail_list_;
}

// -------------------------------------------------------------------

// OneApk

// optional int32 id = 1;
inline bool OneApk::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneApk::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneApk::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneApk::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 OneApk::id() const {
  return id_;
}
inline void OneApk::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string url = 2;
inline bool OneApk::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneApk::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneApk::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneApk::clear_url() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& OneApk::url() const {
  return *url_;
}
inline void OneApk::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void OneApk::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void OneApk::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OneApk::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  return url_;
}
inline ::std::string* OneApk::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OneApk::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string md5 = 3;
inline bool OneApk::has_md5() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneApk::set_has_md5() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneApk::clear_has_md5() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneApk::clear_md5() {
  if (md5_ != &::google::protobuf::internal::kEmptyString) {
    md5_->clear();
  }
  clear_has_md5();
}
inline const ::std::string& OneApk::md5() const {
  return *md5_;
}
inline void OneApk::set_md5(const ::std::string& value) {
  set_has_md5();
  if (md5_ == &::google::protobuf::internal::kEmptyString) {
    md5_ = new ::std::string;
  }
  md5_->assign(value);
}
inline void OneApk::set_md5(const char* value) {
  set_has_md5();
  if (md5_ == &::google::protobuf::internal::kEmptyString) {
    md5_ = new ::std::string;
  }
  md5_->assign(value);
}
inline void OneApk::set_md5(const char* value, size_t size) {
  set_has_md5();
  if (md5_ == &::google::protobuf::internal::kEmptyString) {
    md5_ = new ::std::string;
  }
  md5_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OneApk::mutable_md5() {
  set_has_md5();
  if (md5_ == &::google::protobuf::internal::kEmptyString) {
    md5_ = new ::std::string;
  }
  return md5_;
}
inline ::std::string* OneApk::release_md5() {
  clear_has_md5();
  if (md5_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = md5_;
    md5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OneApk::set_allocated_md5(::std::string* md5) {
  if (md5_ != &::google::protobuf::internal::kEmptyString) {
    delete md5_;
  }
  if (md5) {
    set_has_md5();
    md5_ = md5;
  } else {
    clear_has_md5();
    md5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string name = 4;
inline bool OneApk::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneApk::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneApk::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneApk::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& OneApk::name() const {
  return *name_;
}
inline void OneApk::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void OneApk::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void OneApk::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OneApk::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* OneApk::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OneApk::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string brief = 5;
inline bool OneApk::has_brief() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OneApk::set_has_brief() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OneApk::clear_has_brief() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OneApk::clear_brief() {
  if (brief_ != &::google::protobuf::internal::kEmptyString) {
    brief_->clear();
  }
  clear_has_brief();
}
inline const ::std::string& OneApk::brief() const {
  return *brief_;
}
inline void OneApk::set_brief(const ::std::string& value) {
  set_has_brief();
  if (brief_ == &::google::protobuf::internal::kEmptyString) {
    brief_ = new ::std::string;
  }
  brief_->assign(value);
}
inline void OneApk::set_brief(const char* value) {
  set_has_brief();
  if (brief_ == &::google::protobuf::internal::kEmptyString) {
    brief_ = new ::std::string;
  }
  brief_->assign(value);
}
inline void OneApk::set_brief(const char* value, size_t size) {
  set_has_brief();
  if (brief_ == &::google::protobuf::internal::kEmptyString) {
    brief_ = new ::std::string;
  }
  brief_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OneApk::mutable_brief() {
  set_has_brief();
  if (brief_ == &::google::protobuf::internal::kEmptyString) {
    brief_ = new ::std::string;
  }
  return brief_;
}
inline ::std::string* OneApk::release_brief() {
  clear_has_brief();
  if (brief_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = brief_;
    brief_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OneApk::set_allocated_brief(::std::string* brief) {
  if (brief_ != &::google::protobuf::internal::kEmptyString) {
    delete brief_;
  }
  if (brief) {
    set_has_brief();
    brief_ = brief;
  } else {
    clear_has_brief();
    brief_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 orderid = 6;
inline bool OneApk::has_orderid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OneApk::set_has_orderid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OneApk::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OneApk::clear_orderid() {
  orderid_ = 0;
  clear_has_orderid();
}
inline ::google::protobuf::int32 OneApk::orderid() const {
  return orderid_;
}
inline void OneApk::set_orderid(::google::protobuf::int32 value) {
  set_has_orderid();
  orderid_ = value;
}

// optional string update_time = 7;
inline bool OneApk::has_update_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OneApk::set_has_update_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OneApk::clear_has_update_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OneApk::clear_update_time() {
  if (update_time_ != &::google::protobuf::internal::kEmptyString) {
    update_time_->clear();
  }
  clear_has_update_time();
}
inline const ::std::string& OneApk::update_time() const {
  return *update_time_;
}
inline void OneApk::set_update_time(const ::std::string& value) {
  set_has_update_time();
  if (update_time_ == &::google::protobuf::internal::kEmptyString) {
    update_time_ = new ::std::string;
  }
  update_time_->assign(value);
}
inline void OneApk::set_update_time(const char* value) {
  set_has_update_time();
  if (update_time_ == &::google::protobuf::internal::kEmptyString) {
    update_time_ = new ::std::string;
  }
  update_time_->assign(value);
}
inline void OneApk::set_update_time(const char* value, size_t size) {
  set_has_update_time();
  if (update_time_ == &::google::protobuf::internal::kEmptyString) {
    update_time_ = new ::std::string;
  }
  update_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OneApk::mutable_update_time() {
  set_has_update_time();
  if (update_time_ == &::google::protobuf::internal::kEmptyString) {
    update_time_ = new ::std::string;
  }
  return update_time_;
}
inline ::std::string* OneApk::release_update_time() {
  clear_has_update_time();
  if (update_time_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = update_time_;
    update_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OneApk::set_allocated_update_time(::std::string* update_time) {
  if (update_time_ != &::google::protobuf::internal::kEmptyString) {
    delete update_time_;
  }
  if (update_time) {
    set_has_update_time();
    update_time_ = update_time;
  } else {
    clear_has_update_time();
    update_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string create_time = 8;
inline bool OneApk::has_create_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OneApk::set_has_create_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OneApk::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OneApk::clear_create_time() {
  if (create_time_ != &::google::protobuf::internal::kEmptyString) {
    create_time_->clear();
  }
  clear_has_create_time();
}
inline const ::std::string& OneApk::create_time() const {
  return *create_time_;
}
inline void OneApk::set_create_time(const ::std::string& value) {
  set_has_create_time();
  if (create_time_ == &::google::protobuf::internal::kEmptyString) {
    create_time_ = new ::std::string;
  }
  create_time_->assign(value);
}
inline void OneApk::set_create_time(const char* value) {
  set_has_create_time();
  if (create_time_ == &::google::protobuf::internal::kEmptyString) {
    create_time_ = new ::std::string;
  }
  create_time_->assign(value);
}
inline void OneApk::set_create_time(const char* value, size_t size) {
  set_has_create_time();
  if (create_time_ == &::google::protobuf::internal::kEmptyString) {
    create_time_ = new ::std::string;
  }
  create_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OneApk::mutable_create_time() {
  set_has_create_time();
  if (create_time_ == &::google::protobuf::internal::kEmptyString) {
    create_time_ = new ::std::string;
  }
  return create_time_;
}
inline ::std::string* OneApk::release_create_time() {
  clear_has_create_time();
  if (create_time_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = create_time_;
    create_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OneApk::set_allocated_create_time(::std::string* create_time) {
  if (create_time_ != &::google::protobuf::internal::kEmptyString) {
    delete create_time_;
  }
  if (create_time) {
    set_has_create_time();
    create_time_ = create_time;
  } else {
    clear_has_create_time();
    create_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string apk_name = 9;
inline bool OneApk::has_apk_name() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OneApk::set_has_apk_name() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OneApk::clear_has_apk_name() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OneApk::clear_apk_name() {
  if (apk_name_ != &::google::protobuf::internal::kEmptyString) {
    apk_name_->clear();
  }
  clear_has_apk_name();
}
inline const ::std::string& OneApk::apk_name() const {
  return *apk_name_;
}
inline void OneApk::set_apk_name(const ::std::string& value) {
  set_has_apk_name();
  if (apk_name_ == &::google::protobuf::internal::kEmptyString) {
    apk_name_ = new ::std::string;
  }
  apk_name_->assign(value);
}
inline void OneApk::set_apk_name(const char* value) {
  set_has_apk_name();
  if (apk_name_ == &::google::protobuf::internal::kEmptyString) {
    apk_name_ = new ::std::string;
  }
  apk_name_->assign(value);
}
inline void OneApk::set_apk_name(const char* value, size_t size) {
  set_has_apk_name();
  if (apk_name_ == &::google::protobuf::internal::kEmptyString) {
    apk_name_ = new ::std::string;
  }
  apk_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OneApk::mutable_apk_name() {
  set_has_apk_name();
  if (apk_name_ == &::google::protobuf::internal::kEmptyString) {
    apk_name_ = new ::std::string;
  }
  return apk_name_;
}
inline ::std::string* OneApk::release_apk_name() {
  clear_has_apk_name();
  if (apk_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = apk_name_;
    apk_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OneApk::set_allocated_apk_name(::std::string* apk_name) {
  if (apk_name_ != &::google::protobuf::internal::kEmptyString) {
    delete apk_name_;
  }
  if (apk_name) {
    set_has_apk_name();
    apk_name_ = apk_name;
  } else {
    clear_has_apk_name();
    apk_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required double price = 10;
inline bool OneApk::has_price() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OneApk::set_has_price() {
  _has_bits_[0] |= 0x00000200u;
}
inline void OneApk::clear_has_price() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void OneApk::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline double OneApk::price() const {
  return price_;
}
inline void OneApk::set_price(double value) {
  set_has_price();
  price_ = value;
}

// required int32 type = 11;
inline bool OneApk::has_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OneApk::set_has_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void OneApk::clear_has_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void OneApk::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 OneApk::type() const {
  return type_;
}
inline void OneApk::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required double package_size = 12;
inline bool OneApk::has_package_size() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void OneApk::set_has_package_size() {
  _has_bits_[0] |= 0x00000800u;
}
inline void OneApk::clear_has_package_size() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void OneApk::clear_package_size() {
  package_size_ = 0;
  clear_has_package_size();
}
inline double OneApk::package_size() const {
  return package_size_;
}
inline void OneApk::set_package_size(double value) {
  set_has_package_size();
  package_size_ = value;
}

// -------------------------------------------------------------------

// ApkList

// required .apk.CommandResponse head = 1;
inline bool ApkList::has_head() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApkList::set_has_head() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ApkList::clear_has_head() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ApkList::clear_head() {
  if (head_ != NULL) head_->::apk::CommandResponse::Clear();
  clear_has_head();
}
inline const ::apk::CommandResponse& ApkList::head() const {
  return head_ != NULL ? *head_ : *default_instance_->head_;
}
inline ::apk::CommandResponse* ApkList::mutable_head() {
  set_has_head();
  if (head_ == NULL) head_ = new ::apk::CommandResponse;
  return head_;
}
inline ::apk::CommandResponse* ApkList::release_head() {
  clear_has_head();
  ::apk::CommandResponse* temp = head_;
  head_ = NULL;
  return temp;
}
inline void ApkList::set_allocated_head(::apk::CommandResponse* head) {
  delete head_;
  head_ = head;
  if (head) {
    set_has_head();
  } else {
    clear_has_head();
  }
}

// repeated .apk.OneApk apk_list = 2;
inline int ApkList::apk_list_size() const {
  return apk_list_.size();
}
inline void ApkList::clear_apk_list() {
  apk_list_.Clear();
}
inline const ::apk::OneApk& ApkList::apk_list(int index) const {
  return apk_list_.Get(index);
}
inline ::apk::OneApk* ApkList::mutable_apk_list(int index) {
  return apk_list_.Mutable(index);
}
inline ::apk::OneApk* ApkList::add_apk_list() {
  return apk_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::apk::OneApk >&
ApkList::apk_list() const {
  return apk_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::apk::OneApk >*
ApkList::mutable_apk_list() {
  return &apk_list_;
}

// -------------------------------------------------------------------

// AdbDevice

// required string serial_no = 1;
inline bool AdbDevice::has_serial_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AdbDevice::set_has_serial_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AdbDevice::clear_has_serial_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AdbDevice::clear_serial_no() {
  if (serial_no_ != &::google::protobuf::internal::kEmptyString) {
    serial_no_->clear();
  }
  clear_has_serial_no();
}
inline const ::std::string& AdbDevice::serial_no() const {
  return *serial_no_;
}
inline void AdbDevice::set_serial_no(const ::std::string& value) {
  set_has_serial_no();
  if (serial_no_ == &::google::protobuf::internal::kEmptyString) {
    serial_no_ = new ::std::string;
  }
  serial_no_->assign(value);
}
inline void AdbDevice::set_serial_no(const char* value) {
  set_has_serial_no();
  if (serial_no_ == &::google::protobuf::internal::kEmptyString) {
    serial_no_ = new ::std::string;
  }
  serial_no_->assign(value);
}
inline void AdbDevice::set_serial_no(const char* value, size_t size) {
  set_has_serial_no();
  if (serial_no_ == &::google::protobuf::internal::kEmptyString) {
    serial_no_ = new ::std::string;
  }
  serial_no_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AdbDevice::mutable_serial_no() {
  set_has_serial_no();
  if (serial_no_ == &::google::protobuf::internal::kEmptyString) {
    serial_no_ = new ::std::string;
  }
  return serial_no_;
}
inline ::std::string* AdbDevice::release_serial_no() {
  clear_has_serial_no();
  if (serial_no_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = serial_no_;
    serial_no_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AdbDevice::set_allocated_serial_no(::std::string* serial_no) {
  if (serial_no_ != &::google::protobuf::internal::kEmptyString) {
    delete serial_no_;
  }
  if (serial_no) {
    set_has_serial_no();
    serial_no_ = serial_no;
  } else {
    clear_has_serial_no();
    serial_no_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string state = 2;
inline bool AdbDevice::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AdbDevice::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AdbDevice::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AdbDevice::clear_state() {
  if (state_ != &::google::protobuf::internal::kEmptyString) {
    state_->clear();
  }
  clear_has_state();
}
inline const ::std::string& AdbDevice::state() const {
  return *state_;
}
inline void AdbDevice::set_state(const ::std::string& value) {
  set_has_state();
  if (state_ == &::google::protobuf::internal::kEmptyString) {
    state_ = new ::std::string;
  }
  state_->assign(value);
}
inline void AdbDevice::set_state(const char* value) {
  set_has_state();
  if (state_ == &::google::protobuf::internal::kEmptyString) {
    state_ = new ::std::string;
  }
  state_->assign(value);
}
inline void AdbDevice::set_state(const char* value, size_t size) {
  set_has_state();
  if (state_ == &::google::protobuf::internal::kEmptyString) {
    state_ = new ::std::string;
  }
  state_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AdbDevice::mutable_state() {
  set_has_state();
  if (state_ == &::google::protobuf::internal::kEmptyString) {
    state_ = new ::std::string;
  }
  return state_;
}
inline ::std::string* AdbDevice::release_state() {
  clear_has_state();
  if (state_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = state_;
    state_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AdbDevice::set_allocated_state(::std::string* state) {
  if (state_ != &::google::protobuf::internal::kEmptyString) {
    delete state_;
  }
  if (state) {
    set_has_state();
    state_ = state;
  } else {
    clear_has_state();
    state_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string model = 3;
inline bool AdbDevice::has_model() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AdbDevice::set_has_model() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AdbDevice::clear_has_model() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AdbDevice::clear_model() {
  if (model_ != &::google::protobuf::internal::kEmptyString) {
    model_->clear();
  }
  clear_has_model();
}
inline const ::std::string& AdbDevice::model() const {
  return *model_;
}
inline void AdbDevice::set_model(const ::std::string& value) {
  set_has_model();
  if (model_ == &::google::protobuf::internal::kEmptyString) {
    model_ = new ::std::string;
  }
  model_->assign(value);
}
inline void AdbDevice::set_model(const char* value) {
  set_has_model();
  if (model_ == &::google::protobuf::internal::kEmptyString) {
    model_ = new ::std::string;
  }
  model_->assign(value);
}
inline void AdbDevice::set_model(const char* value, size_t size) {
  set_has_model();
  if (model_ == &::google::protobuf::internal::kEmptyString) {
    model_ = new ::std::string;
  }
  model_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AdbDevice::mutable_model() {
  set_has_model();
  if (model_ == &::google::protobuf::internal::kEmptyString) {
    model_ = new ::std::string;
  }
  return model_;
}
inline ::std::string* AdbDevice::release_model() {
  clear_has_model();
  if (model_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = model_;
    model_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AdbDevice::set_allocated_model(::std::string* model) {
  if (model_ != &::google::protobuf::internal::kEmptyString) {
    delete model_;
  }
  if (model) {
    set_has_model();
    model_ = model;
  } else {
    clear_has_model();
    model_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string product = 4;
inline bool AdbDevice::has_product() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AdbDevice::set_has_product() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AdbDevice::clear_has_product() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AdbDevice::clear_product() {
  if (product_ != &::google::protobuf::internal::kEmptyString) {
    product_->clear();
  }
  clear_has_product();
}
inline const ::std::string& AdbDevice::product() const {
  return *product_;
}
inline void AdbDevice::set_product(const ::std::string& value) {
  set_has_product();
  if (product_ == &::google::protobuf::internal::kEmptyString) {
    product_ = new ::std::string;
  }
  product_->assign(value);
}
inline void AdbDevice::set_product(const char* value) {
  set_has_product();
  if (product_ == &::google::protobuf::internal::kEmptyString) {
    product_ = new ::std::string;
  }
  product_->assign(value);
}
inline void AdbDevice::set_product(const char* value, size_t size) {
  set_has_product();
  if (product_ == &::google::protobuf::internal::kEmptyString) {
    product_ = new ::std::string;
  }
  product_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AdbDevice::mutable_product() {
  set_has_product();
  if (product_ == &::google::protobuf::internal::kEmptyString) {
    product_ = new ::std::string;
  }
  return product_;
}
inline ::std::string* AdbDevice::release_product() {
  clear_has_product();
  if (product_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = product_;
    product_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AdbDevice::set_allocated_product(::std::string* product) {
  if (product_ != &::google::protobuf::internal::kEmptyString) {
    delete product_;
  }
  if (product) {
    set_has_product();
    product_ = product;
  } else {
    clear_has_product();
    product_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string device = 5;
inline bool AdbDevice::has_device() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AdbDevice::set_has_device() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AdbDevice::clear_has_device() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AdbDevice::clear_device() {
  if (device_ != &::google::protobuf::internal::kEmptyString) {
    device_->clear();
  }
  clear_has_device();
}
inline const ::std::string& AdbDevice::device() const {
  return *device_;
}
inline void AdbDevice::set_device(const ::std::string& value) {
  set_has_device();
  if (device_ == &::google::protobuf::internal::kEmptyString) {
    device_ = new ::std::string;
  }
  device_->assign(value);
}
inline void AdbDevice::set_device(const char* value) {
  set_has_device();
  if (device_ == &::google::protobuf::internal::kEmptyString) {
    device_ = new ::std::string;
  }
  device_->assign(value);
}
inline void AdbDevice::set_device(const char* value, size_t size) {
  set_has_device();
  if (device_ == &::google::protobuf::internal::kEmptyString) {
    device_ = new ::std::string;
  }
  device_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AdbDevice::mutable_device() {
  set_has_device();
  if (device_ == &::google::protobuf::internal::kEmptyString) {
    device_ = new ::std::string;
  }
  return device_;
}
inline ::std::string* AdbDevice::release_device() {
  clear_has_device();
  if (device_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = device_;
    device_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AdbDevice::set_allocated_device(::std::string* device) {
  if (device_ != &::google::protobuf::internal::kEmptyString) {
    delete device_;
  }
  if (device) {
    set_has_device();
    device_ = device;
  } else {
    clear_has_device();
    device_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// DevicesList

// required .apk.CommandResponse head = 1;
inline bool DevicesList::has_head() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DevicesList::set_has_head() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DevicesList::clear_has_head() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DevicesList::clear_head() {
  if (head_ != NULL) head_->::apk::CommandResponse::Clear();
  clear_has_head();
}
inline const ::apk::CommandResponse& DevicesList::head() const {
  return head_ != NULL ? *head_ : *default_instance_->head_;
}
inline ::apk::CommandResponse* DevicesList::mutable_head() {
  set_has_head();
  if (head_ == NULL) head_ = new ::apk::CommandResponse;
  return head_;
}
inline ::apk::CommandResponse* DevicesList::release_head() {
  clear_has_head();
  ::apk::CommandResponse* temp = head_;
  head_ = NULL;
  return temp;
}
inline void DevicesList::set_allocated_head(::apk::CommandResponse* head) {
  delete head_;
  head_ = head;
  if (head) {
    set_has_head();
  } else {
    clear_has_head();
  }
}

// repeated .apk.AdbDevice devices_list = 2;
inline int DevicesList::devices_list_size() const {
  return devices_list_.size();
}
inline void DevicesList::clear_devices_list() {
  devices_list_.Clear();
}
inline const ::apk::AdbDevice& DevicesList::devices_list(int index) const {
  return devices_list_.Get(index);
}
inline ::apk::AdbDevice* DevicesList::mutable_devices_list(int index) {
  return devices_list_.Mutable(index);
}
inline ::apk::AdbDevice* DevicesList::add_devices_list() {
  return devices_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::apk::AdbDevice >&
DevicesList::devices_list() const {
  return devices_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::apk::AdbDevice >*
DevicesList::mutable_devices_list() {
  return &devices_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace apk

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_apk_5fprotomsg_2eproto__INCLUDED
